{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/models/todo.js","src/resources/index.js","src/utilities/idgenerators.js","src/services/inmemory-todo-service.js","/Users/SilpaAleti/Desktop/Aurelia/au-todo-app/src/services/inmemory-todo-promise-service.js","styles.scss"],"names":["App","appName","todoTitle","todoService","activeFilter","filterTodos","addTodo","todos","removeTodo","todo","deleteTodoById","id","filterCriteria","console","log","getTodosCount","filter","length","updateTodo","editMode","updateTodoById","checkIfAllTodosAreCompleted","every","completed","toggleAllTodos","completeAllTodos","removeAllTodos","removeCompletedTodos","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Todo","title","getNextId","config","_IdGenerator","IdGenerator","InMemoryTodoService","getAllTodos","getTodoById","pop","push","values","Object","assign","t","forEach","splice"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Todo} from './models/todo';\nimport {InMemoryTodoService} from './services/inmemory-todo-service';\n\nexport class App {\n  constructor() {\n    this.appName = 'Todo List';\n    this.todoTitle = '';\n    this.todoService = new InMemoryTodoService();\n    this.activeFilter = 'all';\n    this.filterTodos(this.activeFilter);\n  }\n  addTodo() {\n    this.todoService.addTodo(new Todo(this.todoTitle,false));\n    this.todoTitle = '';\n    this.todos = this.todoService.filterTodos(this.activeFilter);\n  }\n\n  removeTodo(todo){\n    this.todoService.deleteTodoById(todo.id);\n    this.todos = this.todoService.filterTodos(this.activeFilter);\n  }\n  filterTodos(filterCriteria){\n    this.activeFilter = filterCriteria;\n    console.log(filterCriteria);\n    this.todos = this.todoService.filterTodos(this.activeFilter);\n  }\n\n  getTodosCount(filter){\n    return this.todoService.filterTodos(filter).length;\n  }\n\n  get  allTodosCount(){\n    console.log(\"what is length of allTodosCount \"+this.getTodosCount('all'));\n    return this.getTodosCount('all');\n  }\n\n  get completedTodoCount(){\n    console.log(\"what is length of completedTodoCount \"+this.getTodosCount('completed'));\n    return this.getTodosCount('completed');\n  }\n\n  get activeTodosCount(){\n    return this.getTodosCount('active');\n  }\n\n  updateTodo(todo){\n    if(todo.editMode){\n        todo.editMode = false;\n        this.todoService.updateTodoById(todo.id,todo);\n    } else {\n      todo.editMode = true;\n    }\n  }\n\n  //wrapper methods\n  checkIfAllTodosAreCompleted(){\n    return this.todos.every(todo => todo.completed);\n  }\n\n  toggleAllTodos(){\n    this.todoService.toggleAllTodos();\n    this.filterTodos(this.activeFilter);\n  }\n\n  completeAllTodos(){\n    this.todoService.completeAllTodos();\n    this.checkIfAllTodosAreCompleted();\n  }\n  \n  removeAllTodos(){\n    this.todoService.removeAllTodos();\n    this.checkIfAllTodosAreCompleted();\n  }\n\n  removeCompletedTodos(){\n    this.todoService.removeCompletedTodos();\n    this.checkIfAllTodosAreCompleted();\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {IdGenerator} from '../utilities/idgenerators';\n\nexport class Todo {\n    constructor(title, completed = false) {\n        this.id = IdGenerator.getNextId();\n        this.title = title;\n        this.completed = completed;\n    }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","class _IdGenerator {\n\n    constructor() {\n        this.id = 0;\n    }\n    getNextId(){\n        return ++this.id;\n    }\n}\nexport let IdGenerator = new _IdGenerator();","export class InMemoryTodoService {\n    todos = [];\n\n    constructor(){ }\n\n    getAllTodos(){\n        return this.todos;\n    }\n\n    getTodoById(id){\n        return this.todos.filter(todo => todo.id === id).pop();\n    }\n\n    addTodo(todo){\n        this.todos.push(todo);\n    }\n\n    deleteTodoById(id){\n        this.todos = this.todos.filter(todo => todo.id !== id);\n        return this;\n    }\n\n    updateTodoById(id,values={}){\n        let todo = this.getTodoById(id);\n        if(!todo){\n            return null;\n        }\n        Object.assign(todo, values);\n        return todo;\n    }\n\n    filterTodos(filterCriteria){\n        console.log(\"from service \"+filterCriteria);\n        switch(filterCriteria){\n            case 'active':\n                return this.todos.filter((t) => !t.completed);\n            case 'completed':\n                return this.todos.filter((t) => t.completed);\n            case 'all':\n            default:\n                return this.todos;\n        }\n    }\n    toggleAllTodos(){\n        this.todos.forEach((t) => t.completed = !t.completed);\n    }\n\n    completeAllTodos(){\n        this.todos.forEach((t) => t.completed = true);\n    }\n\n    removeAllTodos(){\n        this.todos.splice(0);\n    }\n    removeCompletedTodos(){\n        this.todos = this.todos.filter((todo) => !todo.completed); \n    }\n}",null,"$padding: 10px;\n$bodyColor: blue;\nbody{ font-family: Verdana, Arial; color:$bodyColor;}\n.strikeout { text-decoration: line-through; }\nul { padding-left: $padding; }\nli { list-style-type: none; }\n"],"sourceRoot":".."}